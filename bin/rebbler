#!/usr/bin/env ruby

require 'bundler/setup'
require 'net/dns'
require 'pp'
require 'ostruct'
require 'optparse'

require_relative '../lib/checker'
require_relative '../lib/app'

def do_commandline
  format = "%-40s %8s %-16s %-s"
  puts format % [ "RBL", "TTL", "Result", "Message"]

  @checker.check do |response|
    response = OpenStruct.new response
    puts format % [ response.rbl, response.ttl, response.result, response.message ]
  end
end

def do_nagios_check(key)
  format = "%-40s %8s %-16s %-s"
  hits = []

  @checker.check do |response|
    hits << OpenStruct.new(response)
  end

  hits = hits.reject { |v| v.result.to_s == "" }
  
  if hits.length == 0
    puts "RBL OK - %s not listed on any RBLS|" % [ key ]
    exit 0
  else
    puts "RBL WARNING - %s listed on %s RBLS||" % [ key, hits.length ]
    puts format % [ "RBL", "TTL", "Result", "Message" ]
    hits.each { |hit|
       puts format % [ hit.rbl, hit.ttl, hit.result, hit.message ]
    }
    exit 1
  end
end

def usage_message
  "Usage: #{File.basename(__FILE__)} [options]"
end

options = OpenStruct.new


begin
  OptionParser.new do |opts|
    opts.banner = usage_message

    opts.on("-s", "--server", "Run web server") do |v|
      options.server = v
    end

    opts.on("-r", "--rbls=filename", "file of RBLs one per line") do |v|
      puts "Setting rbl list from #{v}"
      options.rbl_file = v
      RBL::Loader.file = v
    end

    opts.on("-n", "--nagios-check", "Nagios RBL check") do |v|
      options.nagios = v
    end
  end.parse!
rescue OptionParser::InvalidOption => e
  $stderr.puts usage_message
  $stderr.puts
  $stderr.puts "Unknown option #{e}"
  exit 5
end

if options.server
  App.run!
else
  key = ARGV.first
  
  if key == "" or key.nil?
    $stderr.puts "USAGE: %s {ip|hostname}" % [ File.basename(__FILE__) ]
    exit 1
  end
  
  @checker = Checker.new key
  
  if options.nagios
    do_nagios_check(key)
  else
    do_commandline
  end
end

